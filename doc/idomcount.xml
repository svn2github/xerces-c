<?xml version="1.0" standalone="no"?>
<!DOCTYPE s1 SYSTEM "./dtd/document.dtd">

<s1 title="&XercesCName; Sample 13: IDOMCount">

    <s2 title="IDOMCount">
        <p>IDOMCount uses the provided IDOM API to parse an XML file,
		constructs the DOM tree and walks through the tree counting
		the elements (using just one API call).</p>

        <s3 title="Running IDOMCount">

          <p>The IDOMCount sample parses an XML file and prints out a count of the number of
          elements in the file. To run IDOMCount, enter the following </p>
<source>IDOMCount &lt;XML file&gt;</source>
          <p>The following parameters may be set from the command line </p>
<source>
Usage:
    IDOMCount [options] &lt;XML file | List file&gt;

This program invokes the IDOM parser, builds the DOM tree,
and then prints the number of elements found in each XML file.

Options:
    -l          Indicate the input file is a List File that has a list of xml files.
                Default to off (Input file is an XML file).
    -v=xxx      Validation scheme [always | never | auto*].
    -n          Enable namespace processing. Defaults to off.
    -s          Enable schema processing. Defaults to off.
    -f          Enable full schema constraint checking. Defaults to off.
    -?          Show this help.

  * = Default if not provided explicitly.
</source>
          <p><em>-v=always</em> will force validation<br/>
             <em>-v=never</em>  will not use any validation<br/>
             <em>-v=auto</em>   will validate if a DOCTYPE declaration or a schema declaration is present in the XML document</p>
          <p>Here is a sample output from IDOMCount</p>
<source>cd &XercesCInstallDir;-linux/samples/data
IDOMCount -v=always personal.xml
personal.xml: 20 ms (37 elems)</source>

          <note>The time reported by the system may be different, depending on your
          processor type.</note>
        </s3>
    </s2>
</s1>
