# Copyright (c) 2001-2002 IBM, Inc. and others
#
# File
#    icu/source/samples/ufortune/resources/Makefile
#
# Two ICU tools are run from this makefile:
#    genrb    compiles a resource source file (.txt) into
#             a binary .res file.
#    pkgdata  combines all of the .res files into a single
#             shared library that can then be linked with the
#             maRESTARGETin application.
#
#             pkgdata will recursively generate and run yet
#             another makefile, which in turn runs two more
#             icu tools.  gencmn combines the individual .res
#             files, and genccode emits the data as C source
#             code that can then be built into a .so
#

srcdir = @srcdir@
top_srcdir = @top_srcdir@
top_builddir = @top_builddir@
prefix = @prefix@
exec_prefix = @exec_prefix@
libdir = @libdir@
ICU_PREFIX = @ICU_PREFIX@
SHREXT = @SHREXT@
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
mkdir_p = @mkdir_p@

# Special build rules
include $(top_srcdir)/version.incl

GENRB=$(ICU_PREFIX)/bin/genrb
GENRBOPT=--package-name $(PKGNAME)
PKGDATA=$(ICU_PREFIX)/bin/pkgdata
PKGDATAOPTS=-v -d .
RMV=rm -rf

# No conventional target - this dir is resources only.
TARGET=
CLEANFILES += *.[co] *.lst *.a *.$(SO) $(RESFILES) *.ao README*resources.txt

# Resource shortname
PKGNAME=XercesMessages$(VER)

# DLL and static modes are identical here
RESLDFLAGS= -L$(RESDIR) -l$(PKGNAME)
RESCPPFLAGS=

# target file for resource bundle - this must be set, or 'make all' won't
# build any resources.
RESTARGET=$(top_builddir)/obj/.libs/lib$(PKGNAME)$(SHREXT)
PKGTARGET=lib$(PKGNAME)$(SHREXT)

# Resource files.  Add new ones for additional locales here.
# keep in sync with the file RESLIST
RESFILES=$(PKGNAME)_en_US.res

# list of resource bundles  - keep in sync with RESFILES
RESLIST=$(srcdir)/res-file-list-unix.txt

# list of targets that aren't actually created
.PHONY: report 

check: all

all: $(RESTARGET) $(TARGET)  

$(TARGET): $(OBJECTS)
	$(LINK.cc) $^ $(LOADLIBES) $(LDLIBS) -o $@ $(XTRALIBS)

$(RESTARGET): $(RESFILES)
	@echo building $(RESTARGET)
	$(PKGDATA) --name $(PKGNAME) --mode dll $(PKGDATAOPTS) $(RESLIST)
	$(mkdir_p) $(top_builddir)/obj/.libs
	mv $(PKGTARGET) $(RESTARGET)
	
# clean out files
distclean clean: $(CLEAN_SUBDIR)
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
	-rm $(OBJECTS) $(TARGET) $(RESTARGET) $(RESFILES)

## resources
$(PKGNAME)_%.res: $(srcdir)/%.txt
	@echo "generating $@"
	$(GENRB) $(GENRBOPT) $^

# Needed to support "make install" and "make uninstall"
install: $(RESTARGET)
	$(mkdir_p) $(libdir)
	$(INSTALL_PROGRAM) $(RESTARGET) $(libdir)

uninstall: 
	-rm $(libdir)/$(PKGTARGET)

# Needed to support "make dist"
distdir:
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='res-file-list-unix.txt res-file-list-wins.txt en_US.txt Makefile.in resources.mak'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
