Revision history for Perl extension XML::Xerces.

2.7.0-0 Sun Jan  1 08:44:27 IST 2006
	- first public 2.7 release
	- working with SWIG-1.3.28 pre-release
	- removed all uses of XMLString::transcode() from the Perl
	  callback handler classes in Handler/

2.6.0-2
	- first public 2.6 release
	- all known memory leaks fixed
	- all known segfaults fixed (especially with regards to
          exception handling) - perhaps this will fix AIX?

2.6.0-1
	- second beta 2.6 release
	

2.6.0-0
	- first attempt at 2.6 release
	- most memory leaks resovlved

2.3.0-5
	- fifth bugfix release of 2.3.0 series.
	- added new samples: validator.pl, memtest.pl, xerces-memtest.pl

2.3.0-4 Sun Nov  10 12:03:30 IST 2003
	- fourth bugfix release of 2.3.0 series.
        - exposed new API components for DTDValidator and SchemaValidator
	- added XML::Xerces::XMLCatalogResolver, for a standard way of
          using XMLCatalog to resolve file locations
	- added new samples: samples/DOM2hash.pl, samples/EnumVal.pl,
          and samples/SEnumVal.pl
        - improved Win32 support

2.3.0-3 Sun Nov  2 12:03:30 IST 2003
	- third bugfix release of 2.3.0 series.
	- fixed output of all XMLUni::* constants (thanks to Christian
          Orsatti for pointing this out) 
	- added LocalFileFormatTarget (thanks to Christian
          Orsatti for pointing this out) 
	- added hints/darwin.pl (thanks to Adam Whitney for helping
          with this)
	- added cygwin fix for Xerces-C libname (thanks to Stephen
          Long for helping with this) 
	- added fixes for Win32 (thanks to Martin Raspe for helping
          with this)  

2.3.0-2 Mon Oct 13 01:03:51 IST 2003
	- second bugfix release of 2.3.0 series.
	- fixes isAnySlash() error

2.3.0-1 Aug 09 2003
	- first bugfix release of 2.3.0 series.
	- fixes support for Attributes::getValue(int) and
          AttributeList::getValue(int)
	- added support for MacOS X.

2.3.0-0 Aug 09 2003
	- First public release that supports Xerces-C-2.3.0

2.1.0-1 Mon Dec  9 13:56:08 MST 2002
	- Second public release that supports Xerces-C-2.1.0
	- made all tests use Test::More
	- fixed entity resolution in Schema.t test
	- fixed other minor bugs in other tests

2.1.0-0 Sun Dec  8 23:59:34 MST 2002
	- First public release that supports Xerces-C-2.1.0
	- Added missing operator!= for DOMNode
				   
2.0.0-2 Mon Dec  9 12:31:38 MST 2002
	- Second release that supports Xerces-C-2.0.0
	- made all tests use Test::More
	- fixed entity resolution in Schema.t test
	- fixed other minor bugs in other tests

2.0.0-1 Sun Dec  8 23:02:42 MST 2002
	- First public release that supports Xerces-C-2.0.0
	- Removed support for XMLScanner
	- Removed DOMParse support, instead DOMWriter from DOM Level 3
	  is used

1.7.0-1 Wed Apr 24 22:07:13 MDT 2002
	- Second release that supports Xerces-C-1.7.0
	- Added support for DOM_NodeIterator and DOM_TreeWalker
	- Added basic support for XMLScanner
	- DOM_Document's will now stay alive even if the DOMParser
	  that created them goes out of scope. This means it is
          possible to have a subroutine that parses a file and returns
	  the resulting DOM_Document. This used to cause a segfault.
	- Fixed overloaded InputSource constructors that were using
          char* versions instead of Unicode versions
	- Many internal changes that improve code generation and
          maintenance, thanks to the ever-improving SWIG.

1.7.0_0 Sun Mar 24 18:26:37 MST 2002
        - Mirrors Xerces-C-1.7.0 release
	- The DOM API is now implemented by the Xerces-C IDOM
          implementation (see README for issues)
	- All dynamic casting of DOM_Node*'s is now done internally by
          the C++ code. This means that calls to DOM_Node::actual_cast
          are now unnecessary.
	- ensured that methods which return DOM_NodeList's and
	  DOM_NamedNodeMap's will never return undef in an array
          context (instead they return the empty list).

1.6.0_0 Wed Feb 20 20:29:00 MST 2002
        - Mirrors Xerces-C-1.6.0 release

1.5.2_0 Fri Nov  2 11:38:02 MST 2001
        - Mirrors Xerces-C-1.5.2 release
	- Version numbering change, to reflect that this is the first
	  release of XML::Xerces to require Xerces-C-1.5.2 
	- Unicode now works! I modified all I/O between Perl and
	  Xerces-C to use transcoders to properly convert between
	  Perl's internal UTF-8 format and Xerces-C's internal UTF-16
	  format. 
	- IDOM operators (== and !=) now work
	- I?DOM_Attr::setAttribute() will now accept integer and
	  floating point values as well as strings, so you no longer
	  need to wrap them in strings.
	- New sample application: IDOMPrint.pl
	- All overloaded methods (except DOM API) are now supported. 

1.5.7 Sun Oct  7 10:36:23 MDT 2001
        - cerr is no longer used by any source files, so compile
          problems with libstdc++ should be gone.
        - removed lots of unnecessary stuff from Xerces.C, so some
          architecture specific compile issues should be gone.
        - MemBufInputSource no longer requires a fake system id as an
          argument to the constructor, you may supply one, but this is
          optional
	- DOM_Attr::setAttributes() no longer segfaults if 'undef' is
	  passed for the attribute or its value.
	- hints/ directory now exists to help isolate the
	  architecture-specific pieces of Makefile.PL. Currently there
	  is a file for Solaris_2, DEC_OSF, and Linux.
        - Thanks to major improvements in SWIG, it is now easier to
          support overloaded methods. The following classes/methods are
          currently supported:
	     *Parser
	     XMLPScanToken
	     *InputSource
	     XMLURL
	     *::operator=
	     *::operator==
	     *::operator!=	
	- Added samples/IDOMCount.pl
	- Thanks to major improvements in the SWIG parser, the
	  majority of the private header files in Xerces_headers are
	  no longer needed, only three parse errors remain.
	- Thanks to major improvements in SWIG, the internal
	  code generation is greatly simplified.

1.5.6 Mon Sep 10 01:19:29 MDT 2001
        - MAJOR MEMORY FIX: All callbacks were leaking memory like a
          sieve. This was especially noticeable with SAX 1/2
          interfaces when parsing large (~200Mb) files. It appears
          that the Xerces-C SAX2 implementation still has leaks
          somewhere, but SAX1 seems fine now.

1.5.5 Wed Sep  5 23:01:03 MDT 2001
        - Support for the SAX2 Attributes interface added
        - Major memory fix, was not freeing memory for parsers. 
	- IDOMParser now has overloaded parse() and parseFirst()
	- DOMParse.pm: fixed warnings about \1 usage in regexp

1.5.4 Wed Aug  1 20:49:31 MDT 2001
        - Support for Xerces-C-1.5.1
	- EntityResolver interface is now supported (see
          t/EntityResolver.t for examples of use XML Catalogs to
          resolve your DTD's)
	- Began adding architecture specific compile options for linux
          and Solaris. 
	- Added PORTS to describe any steps needed to get Xerces.pm to
          compile on different architectures
	- Beginnings of a FAQ

1.5.3 Wed Jul  10 11:36:16 MDT 2001
        - Important fix for RedHat 6.2 users, iostream from gcc 2.91
          chokes on -Dbool=char, so #undef bool is needed
	- XERCES_DEVEL no longer needs to be set to get Xerces.C to
          compile. 

1.5.2 Wed Jul  10 10:36:16 MDT 2001
        - Due to a mistake in SAX2XMLReader.hpp, 1.5.1 could only
          be compiled against the Xerces-C CVS version of 1.5

1.5.1 Wed Jul  9 10:36:16 MDT 2001
	- New Xerces 1.5 functionality:
	  * Schema validation
	  * Preliminary support for new IDOM interface (see README for
	    important details using IDOM)
	- 'perl Makefile.PL' now dies unless libxerces is found
	- All overloaded DOMParser::parse() methods are now supported
	- Full Exception handling - all known Xerces-C exceptions are
	  now handled in Xerces.pm, with default handlers and
	  user-definable perl handlers.
	- now using digital signatures to ensure release integrity,
	  see README for details

1.5.0 Tue Jun 26 15:15:52 MDT 2001
        - First 1.5 release, but none of the extra 1.5 functionality
	  is included (sorry, help porting is welcome).
        - Fixed Makefile.PL bug that automatically forced remaking Xerces.pm
          and Xerces.C, whenever one of the Handler/*.o files was
          modified
        - SWIG use can only be activated by setting the $XERCES_DEVEL
          environment variable. This should eliminate future
          accidental miscompilings of Xerces.pm and Xerces.C

1.4.1 Wed Jun 13 23:25:51 MDT 2001
        - Inheritance of all Xerces classes now works! For example, it
          is possible to subclass any of the DOM_Node classes with
          your own Perl-based ones without throwing SWIG runtime type
          checking errors.
	- test scripts now use PerlContentHandler and
	  PerlDocumentHandler classes for SAX 1.0 and 2.0. 
	- general cleanup of test script output. Some tests marked as
	  'should fail', that means a Xerces-C feature is broken and
	  so the failure is just a placeholder until they fix it.
	- Fixed bugs in test scripts. In Perl prior to 5.6 buffered IO
	  was handled differently, and file handles need to be closed
	  to ensure a flush of the data. (thanks to 
	  "Matthew D. Langston" <langston@SLAC.Stanford.EDU>, and 
          "Benjamin Low" <b_d_low@yahoo.com.au>).
        - XMLException's are now supported via the
          PerlExceptionHandler class. These exceptions are thrown
          outside of parsing and are not handled by the standard
          ErrorHandler mechanism.

1.4.0 Mon Apr 16 23:04:48 MST 2001
        - first support for Xerces-C 1.4
	- Preliminary support for SAX 2.0. Including new
	  PerlDocumentHandler and PerlContentHandler classes.
	- More of XMLPlatformUtils exposed

1.3.5 Mon Apr 16 09:18:14 MST 2001
        - bug fix release, Xerces.C got corrupted in 1.3.4
	- fixed path in t/SAXCount.t

1.3.4 Fri Apr 13 16:51:05 MST 2001
	- Major Addition: SAX 1.0 interface is now supported. 
	- default error handlers now have a 'FILE:' line in output
	- numerous new tests were added
	- DOMParse.pm now requires XMLDecl node for processing DOM
	- finally admitted the 'Use of uninitizialed value ... in
	  global destruction' warning is more than I can handle. It's
	  just a warning. It's too low down in SWIG for me to fix.
	- I'll have to wait to swith to 1.4 until all SAX 1.0 and 2.0
	  API's are fully supported

1.3.3 Thu Mar 22 16:48:21 MST 2001
	- No... *This* should be the final 1.3 release ;-)
	- Fixed numerous small problems in TestUtils.pm, including
	  an creating the default error handler as a global variable
	  instead of lexical variable, all test now succeed
	- XML::Xerces now has three non-exported functions that can be
	  used by error handlers => error(), fatal_erro(), and
	  warning(). 
	- DOMCount.pl and DOMPrint.pl now support a -n option to
	  specify namespace support

1.3.2 Thu Mar 15 09:12:41 MST 2001
	- Should be the final 1.3 release
	- namespace is finally XML::Xerces
	- special Perl API for DOM_NodeList and DOM_NamedNodeMap
	- Developer package is now much cleaner: both SWIG 1.1 and 1.3
	  work from same source files

1.3.1 Thu Mar  8 22:46:40 MST 2001
	- Tom Watson's sample files ported to 1.3 API (DOMCount.pl,
	  DOMCreate.pl, and DOMPrint.pl) 
	- Tom Watson's Xerces::DOMParse module ported to 1.3 API

1.3.0 Wed Mar  7 09:29:10 MST 2001
	- initial release of Harmon Nine's 1.3 port
	- Linux is now the only supported platform

### *** emacs file mode definition ***
### Local Variables: 
### mode:text
### mode:filladapt
### End: 
